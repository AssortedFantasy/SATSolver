
/* This is the Lexer, it makes tokens */

/* be careful with comments, each needs whitespace before it */
%{

  #include <stdio.h>

  /* This file is generated by flex */
  #include "y.tab.h"
%}


/* Rules section, uses REGEX */
%%

[ \t] ;                                   // Catches all whitespace
[\(\[\{]               return O_BRACE;    // Open Parenthesis
[\}\]\}]               return C_BRACE;    // Close Parenthesis
[!~¬]                  return PRE_NEG;    // Negation Prefix Operator
[']                    return POST_NEG;   // Negation Postfix Operator
(\^d)                  return DUAL;       // Dual Operator
(\^c)                  return COMPLEMENT; // Complement Operator
[\^*·]|(\&)+           return AND;        // AND Operator
[∨V+]|[\|]+            return OR;       // Or Operator
[⊕⊻@]|(xor)|(XOR)     return XOR;      // Xor Operator
[≡=]|(xnor)|(XNOR)     return XNOR;     // Equivalence Operator
[01]                   yylval=atoi(yytext); return LITERAL;  // Literals
[a-zA-Z][a-zA-Z0-9]*   yylval=strdup(yytext); return VARIABLE; // This expression catches variables

%%